# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright (c) 2015 Intracom S.A. Telecom Solutions. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 which accompanies this distribution,
# and is available at http://www.eclipse.org/legal/epl-v10.html


# ------------------------------------------------------------------------------
# VM configuration.
# ------------------------------------------------------------------------------

# make a new nstat_vm_basebox based on 'ubuntu/trusty64'
# https://atlas.hashicorp.com/ubuntu (latest version)
# vagrant box update (for updating to the latest official box)
# ------------------------------------------------------------------------------
nstat_vm_basebox = 'ubuntu/trusty64'
nstat_vm_ram = '4096'
nstat_vm_cpus = '2'

# ------------------------------------------------------------------------------
# RUNNING_ENV options: 'with-proxy', 'no-proxy'
# ------------------------------------------------------------------------------
RUNNING_ENV = 'with-proxy'

# configure proxy settings
# ------------------------------------------------------------------------------
if RUNNING_ENV == 'with-proxy'
  http_proxy = 'http:/<IP_address>:<port_number>'
  puts '--------------------------------------------------------'
  puts 'running: with-proxy RUNNING_ENV'
  if !Vagrant.has_plugin?('vagrant-proxyconf')
    abort("          -vagrant-proxyconf plugin missing.
          -install it manually by typing:
--------------------------------------------------------
          vagrant plugin install vagrant-proxyconf
--------------------------------------------------------")
  end
elsif RUNNING_ENV == 'no-proxy'
    puts '--------------------------------------------------------'
    puts 'running: with no-proxy RUNNING_ENV'
else
    puts 'RUNNING_ENV not set'
end


Vagrant.configure(2) do |config|

    config.ssh.username = 'vagrant'
    config.ssh.password = 'vagrant'

    if RUNNING_ENV == 'with-proxy'
        config.proxy.http = http_proxy
        config.proxy.https = http_proxy
        config.proxy.no_proxy = 'localhost,127.0.0.1'
    end

    config.ssh.shell = 'bash -c "BASH_ENV=/etc/profile exec bash"'

    config.vm.define 'nstat_vm_base' do |nstat_machine|

      nstat_machine.vm.box = nstat_vm_basebox
        nstat_machine.vm.provider :virtualbox do |vb|
            vb.memory = nstat_vm_ram
            vb.cpus = nstat_vm_cpus
        end

        nstat_machine.vm.provider :libvirt do |libvirt|
            libvirt.memory = nstat_vm_ram
            libvirt.cpus = nstat_vm_cpus
        end

    end

# ------------------------------------------------------------------------------
# Provisioning actions
# ------------------------------------------------------------------------------
    config.vm.provision :shell, privileged: true, :path => 'provisioning/provision.sh'
    config.vm.provision :shell, privileged: true, :path => 'provisioning/ovs-mininet-setup.sh'
    config.vm.provision :shell, privileged: true, inline: 'apt-get clean'

end
