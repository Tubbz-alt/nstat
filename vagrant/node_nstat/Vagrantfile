# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright (c) 2015 Intracom S.A. Telecom Solutions. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 which accompanies this distribution,
# and is available at http://www.eclipse.org/legal/epl-v10.html


# ------------------------------------------------------------------------------
# VM configuration.
# ------------------------------------------------------------------------------

# make a new nstat_vm_basebox based on 'nstat_vm_base'
# ------------------------------------------------------------------------------
nstat_vm_basebox = 'nstat_vm_base'
nstat_vm_ram = 512
nstat_vm_cpus = 1
nstat_vm_bridge_interface_name = 'br0'
nstat_vm_hostname = 'nodenstat'
nstat_vm_name = 'vm_nstat'
nstat_vm_private_network_ip = '192.168.100.15'

# ------------------------------------------------------------------------------
# RUNNING_ENV options: 'with-proxy', 'no-proxy'
# ------------------------------------------------------------------------------
RUNNING_ENV = 'with-proxy'
ENV['VAGRANT_DEFAULT_PROVIDER']='libvirt'

# configure proxy settings
# ------------------------------------------------------------------------------
if RUNNING_ENV == 'with-proxy'
  #http_proxy = 'http://<IP_address>:<port_number>'
  http_proxy = 'http://172.28.40.9:3128'
  puts '--------------------------------------------------------'
  puts 'with-proxy RUNNING_ENV'
  if !Vagrant.has_plugin?('vagrant-proxyconf')
    abort("-vagrant-proxyconf plugin missing.
           -install it manually by typing:
--------------------------------------------------------
            vagrant plugin install vagrant-proxyconf
--------------------------------------------------------
            rerun: vagrant up")
  end
elsif RUNNING_ENV == 'no-proxy'
  puts '--------------------------------------------------------'
  puts 'running: no-proxy RUNNING_ENV'
else
  puts 'RUNNING_ENV not set'
end


Vagrant.configure(2) do |config|

    config.ssh.username = 'vagrant'
    config.ssh.password = 'vagrant'

    if RUNNING_ENV == 'with-proxy'
        config.proxy.http = http_proxy
        config.proxy.https = http_proxy
        config.proxy.no_proxy = 'localhost,127.0.0.1,192.168.100.15,192.168.100.16,192.168.100.17,192.168.100.18,192.168.100.19,192.168.100.20,192.168.100.21,192.168.100.30,192.168.100.31,192.168.100.31'
    end

    config.ssh.shell = 'bash -c "BASH_ENV=/etc/profile exec bash"'

    config.vm.define 'nstat_vm_packaged' do |nstat_machine|

        nstat_machine.vm.box = nstat_vm_basebox
        nstat_machine.vm.hostname = nstat_vm_hostname
        nstat_machine.vm.network :private_network, ip: nstat_vm_private_network_ip

        nstat_machine.vm.provider :virtualbox do |vb|
            vb.name = nstat_vm_name

            # Customize the amount of memory on the VM:
            vb.memory = nstat_vm_ram
            vb.cpus = nstat_vm_cpus
            #vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
        end

        nstat_machine.vm.provider :libvirt do |libvirt|
            libvirt.memory = nstat_vm_ram
            libvirt.cpus = nstat_vm_cpus
            libvirt.management_network_name = 'vagrant-libvirt-nstat'
        end

    end

# ------------------------------------------------------------------------------
# Provisioning actions
# ------------------------------------------------------------------------------
  #config.vm.provision :shell, privileged: true, inline: 'sudo ifconfig eth1 192.168.100.15 netmask 255.255.255.0 up'
  config.vm.provision :shell, privileged: true, inline: 'sudo useradd -m -s /bin/bash -p $(openssl passwd -crypt jenkins) -U jenkins'

end
