FROM ubuntu:14.04

# Setup proxy settings
#-------------------------------------------------------------------------------
ENV http_proxy="http://172.28.40.9:3128/"
ENV https_proxy="http://172.28.40.9:3128/"
ENV ftp_proxy="http://172.28.40.9:3128/"
ENV no_proxy="127.0.0.1,localhost"

RUN echo 'export http_proxy="http://172.28.40.9:3128/"' | tee -a /root/.bashrc
RUN echo 'export https_proxy="http://172.28.40.9:3128/"' | tee -a /root/.bashrc
RUN echo 'export ftp_proxy="http://172.28.40.9:3128/"' | tee -a /root/.bashrc
RUN echo 'export no_proxy="127.0.0.1,localhost"' | tee -a /root/.bashrc

RUN echo 'Acquire::http::Proxy "http://172.28.40.9:3128/";' | tee -a /etc/apt/apt.conf
RUN echo 'Acquire::ftp::Proxy "ftp://172.28.40.9:3128/";' | tee -a /etc/apt/apt.conf
RUN echo 'Acquire::https::Proxy "https://172.28.40.9:3128/";' | tee -a /etc/apt/apt.conf

# Setup OpenVSwitch service start
#-------------------------------------------------------------------------------
RUN echo 'service openvswitch-switch start' | tee -a /root/.bashrc

# Install NSTAT necessary tools
#-------------------------------------------------------------------------------
RUN apt-get update
RUN apt-get install --force-yes -y git
RUN apt-get install --force-yes -y unzip
RUN apt-get install --force-yes -y wget
RUN apt-get install --force-yes -y iperf
RUN apt-get install --force-yes -y mz
RUN apt-get install --force-yes -y wireshark
RUN apt-get install --force-yes -y net-tools

# build tools
#-------------------------------------------------------------------------------
RUN apt-get update
RUN apt-get install --force-yes -y build-essential
RUN apt-get install --force-yes -y snmp
RUN apt-get install --force-yes -y libsnmp-dev
RUN apt-get install --force-yes -y snmpd
RUN apt-get install --force-yes -y libpcap-dev
RUN apt-get install --force-yes -y autoconf
RUN apt-get install --force-yes -y make
RUN apt-get install --force-yes -y automake
RUN apt-get install --force-yes -y libtool
RUN apt-get install --force-yes -y libconfig-dev
RUN apt-get install --force-yes -y fakeroot
RUN apt-get install --force-yes -y debhelper
RUN apt-get install --force-yes -y libssl-dev
RUN apt-get install --force-yes -y pkg-config
RUN apt-get install --force-yes -y bzip2
RUN apt-get install --force-yes -y openssl
RUN apt-get install --force-yes -y procps

# ssh service & java installation
#-------------------------------------------------------------------------------
RUN apt-get update
RUN apt-get install --force-yes -y openssh-client
RUN apt-get install --force-yes -y openssh-server
RUN apt-get install --force-yes -y openjdk-7-jdk
RUN apt-get install --force-yes -y openjdk-7-jre

# Python installation
#-------------------------------------------------------------------------------
RUN apt-get update
RUN apt-get install --force-yes -y python-dev
RUN apt-get install --force-yes -y python-setuptools
RUN apt-get install --force-yes -y python3.4-dev
RUN apt-get install --force-yes -y python3-setuptools
RUN apt-get install --force-yes -y python
RUN apt-get install --force-yes -y python3.4
RUN apt-get install --force-yes -y python-pip
RUN apt-get install --force-yes -y python3-pip

# Upgrade python setuptools and pip
#-------------------------------------------------------------------------------
RUN pip install --upgrade pip
RUN pip3 install --upgrade pip3
RUN pip install --upgrade setuptools
RUN pip3 install --upgrade setuptools

# Install Python libraries
#-------------------------------------------------------------------------------
RUN apt-get update
RUN apt-get install --force-yes -y python3-bottle
RUN apt-get install --force-yes -y python3-requests
RUN apt-get install --force-yes -y python3-matplotlib
RUN apt-get install --force-yes -y python3-lxml
RUN apt-get install --force-yes -y python-lxml
RUN apt-get install --force-yes -y python-paramiko
RUN apt-get install --force-yes -y python-pypcap
RUN apt-get install --force-yes -y python-dpkt
RUN apt-get install --force-yes -y python-bottle

# Install NSTAT necessary python3.4 tools
#-------------------------------------------------------------------------------
RUN easy_install3 pip
RUN pip3 install paramiko
RUN pip3 install collections-extended

# Install Mininet
#-------------------------------------------------------------------------------
RUN apt-get update && apt-get install --force-yes -y uuid-runtime
RUN git clone https://github.com/mininet/mininet.git
RUN cd mininet
RUN git checkout -b 2.2.1 2.2.1
RUN ./util/install.sh -n3f

RUN ./util/install.sh -V 2.3.0
RUN service openvswitch-switch start
RUN /bin/bash
