# -*- mode: ruby -*-
# vi: set ft=ruby :

################################################################
################################################################
####### VM configuration. DON'T FORGET TO CHANGE THESE  ########
################################################################
################################################################
RUNNING_ENV = 'intracom-internal'
odlp2_vm_basebox = 'odlp2-provisioned-vXXX'
odlp2_vm_domain = 'intracom-telecom.com'
odlp2_vm_ram_cont = '1024'
odlp2_vm_cpus_cont = '1'
odlp2_vm_ram_mini = '2048'
odlp2_vm_cpus_mini = '1'
num_mininet_vms = 3
odlp2_vm_private_network_ip_cont = '10.1.38.45'
odlp2_vm_private_network_ip_mini = '10.1.38.50' # the first IP Address in the  mininet VMs IP Address range
#forwarded_ports_guest = [6653, 6633, 8181, 3000]
forwarded_ports_guest = []
#forwarded_ports_host = [6654, 6634, 8182, 3001]
forwarded_ports_host = []
################################################################


if RUNNING_ENV == 'intracom-internal'
    http_proxy = 'http://172.28.40.9:3128'
    gitlab = '172.28.40.15'
    puts 'intracom-internal RUNNING_ENV'
elsif RUNNING_ENV == 'intracom-external'
    http_proxy = 'http://10.124.32.12:80'
    gitlab = '10.124.165.79'
    puts 'intracom-external RUNNING_ENV'
else
    http_proxy = ''
    gitlab = ''
    puts 'Neutral RUNNING_ENV'
end


Vagrant.configure(2) do |config|

    config.ssh.username = 'vagrant'
    config.ssh.password = 'vagrant'

    if !http_proxy.eql?''
        if Vagrant.has_plugin?('vagrant-proxyconf')
            config.proxy.http = http_proxy
            config.proxy.https = http_proxy
        else
            abort("vagrant-proxyconf plugin missing. Exiting.")
        end
    end

    #TODO: change rsync to nfs
#    config.vm.synced_folder '.', '/vagrant', type: 'rsync'

    #If tty is not available
    config.ssh.shell = 'bash -c "BASH_ENV=/etc/profile exec bash"'


    # Provision controller VM
    odlp2_vm_hostname_cont = 'controller'

    uid_cont = ENV.has_key?('VM_UID') ? '_' + ENV['VM_UID'].split('-')[0] : '_' + odlp2_vm_private_network_ip_cont
    odlp2_vm_name_cont = 'odlp2_ubuntu_box_'  + ENV['USER'] + uid_cont + '_cont'

    config.vm.define odlp2_vm_name_cont do |machine|

        puts "Controller VM IP: " + odlp2_vm_private_network_ip_cont

        machine.proxy.no_proxy = 'localhost,127.0.0.1,' + gitlab + ',' + odlp2_vm_private_network_ip_cont
        machine.vm.box = odlp2_vm_basebox
        machine.vm.host_name = odlp2_vm_hostname_cont + '.' + odlp2_vm_hostname_cont
        machine.vm.network :private_network, ip: odlp2_vm_private_network_ip_cont

        forwarded_ports_guest.zip(forwarded_ports_host).each do |guest_port, host_port|
            machine.vm.network 'forwarded_port', guest: guest_port, host: host_port, auto_correct: true
        end

        machine.vm.provider :virtualbox do |vb|
            # Display the VirtualBox GUI when booting the machine
            #vb.gui = true
            # Customize the amount of memory on the VM:
            vb.memory = odlp2_vm_ram_cont
            vb.cpus = odlp2_vm_cpus_cont

            # change the network card hardware for better performance
            vb.customize ["modifyvm", :id, "--nictype1", "virtio" ]
            vb.customize ["modifyvm", :id, "--nictype2", "virtio" ]

            # suggested fix for slow network performance
            # see https://github.com/mitchellh/vagrant/issues/1807
            #vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            #vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        end

        machine.vm.provider :libvirt do |libvirt|
            libvirt.memory = odlp2_vm_ram_cont
            libvirt.cpus = odlp2_vm_cpus_cont
            libvirt.management_network_name = 'vagrant-libvirt-new'
            libvirt.management_network_address = '192.168.124.0/24'
        end

    end


    # Provision mininet VMs
    odlp2_vm_hostname_mini = 'mininet'

    (1..num_mininet_vms).each do |mn_vm|

        # Assign adjacent IP addresses to all mininet VMs
        last_two_ip_digits = odlp2_vm_private_network_ip_mini[-2..-1].to_i
        new_last_two_ip_digits = last_two_ip_digits + (mn_vm - 1)
        base_ip = odlp2_vm_private_network_ip_mini[0..-3]
        odlp2_vm_private_network_ip_mini_inst = base_ip + new_last_two_ip_digits.to_s

        puts "Mininet VM " + mn_vm.to_s + " IP: " + odlp2_vm_private_network_ip_mini_inst

        uid_mini = ENV.has_key?('VM_UID') ? '_' + ENV['VM_UID'].split('-')[0] : '_' + odlp2_vm_private_network_ip_mini_inst
        odlp2_vm_name_mini_inst = 'odlp2_ubuntu_box_'  + ENV['USER'] + uid_mini + '_mini' + "_" + mn_vm.to_s

        odlp2_vm_hostname_mini_inst = odlp2_vm_hostname_mini + "-" + mn_vm.to_s

        config.vm.define odlp2_vm_name_mini_inst do |machine|
            machine.proxy.no_proxy = 'localhost,127.0.0.1,' + gitlab + ',' + odlp2_vm_private_network_ip_mini_inst
            machine.vm.box = odlp2_vm_basebox
            machine.vm.host_name = odlp2_vm_hostname_mini_inst + '.' + odlp2_vm_hostname_mini_inst
            machine.vm.network :private_network, ip: odlp2_vm_private_network_ip_mini_inst

            forwarded_ports_guest.zip(forwarded_ports_host).each do |guest_port, host_port|
                machine.vm.network 'forwarded_port', guest: guest_port, host: host_port, auto_correct: true
            end

            machine.vm.provider :virtualbox do |vb|
                # Display the VirtualBox GUI when booting the machine
                #vb.gui = true
                # Customize the amount of memory on the VM:
                vb.memory = odlp2_vm_ram_mini
                vb.cpus = odlp2_vm_cpus_mini

                # change the network card hardware for better performance
                vb.customize ["modifyvm", :id, "--nictype1", "virtio" ]
                vb.customize ["modifyvm", :id, "--nictype2", "virtio" ]

                # suggested fix for slow network performance
                # see https://github.com/mitchellh/vagrant/issues/1807
                #vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
                #vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

            end

            machine.vm.provider :libvirt do |libvirt|
                libvirt.memory = odlp2_vm_ram_mini
                libvirt.cpus = odlp2_vm_cpus_mini
                libvirt.management_network_name = 'vagrant-libvirt-new'
                libvirt.management_network_address = '192.168.124.0/24'
            end

        end
    end

    #This provisioning step is taken as the http_proxy is set
    config.vm.provision :shell, privileged: true, :path => 'provisioning/settings-xml-setup.sh'

end
