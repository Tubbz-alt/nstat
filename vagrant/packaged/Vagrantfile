# vi: set ft=ruby :

# Copyright (c) 2015 Intracom S.A. Telecom Solutions. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 which accompanies this distribution,
# and is available at http://www.eclipse.org/legal/epl-v10.html


# ------------------------------------------------------------------------------
# VM configuration.
# ------------------------------------------------------------------------------


# RUNNING_ENV options: 'intracom-internal', 'intracom-external'
# ------------------------------------------------------------------------------
RUNNING_ENV = 'intracom-internal'

# make a new nstat_vm_basebox based on 'ubuntu/trusty64'
# ------------------------------------------------------------------------------
nstat_vm_basebox = 'nstat_base_box'
nstat_vm_ram = '512'
nstat_vm_cpus = '1'
nstat_vm_private_network_ip_vm = '192.168.63.5'


if RUNNING_ENV == 'intracom-internal'
    http_proxy = 'http://<IP_address>:<port_number>'
    puts 'intracom-internal RUNNING_ENV'
elsif RUNNING_ENV == 'intracom-external'
    http_proxy = 'http://10.124.32.12:80'
    puts 'intracom-external RUNNING_ENV'
else
    http_proxy = ''
    puts 'Neutral RUNNING_ENV'
end


Vagrant.configure(2) do |config|

  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'

    if !http_proxy.eql?''
        if Vagrant.has_plugin?('vagrant-proxyconf')
            config.proxy.http = http_proxy
            config.proxy.https = http_proxy
            config.proxy.no_proxy = 'localhost,127.0.0.1,172.28.40.15'
        else
            abort("vagrant-proxyconf plugin missing. Exiting.")
        end
    end

    config.ssh.shell = 'bash -c "BASH_ENV=/etc/profile exec bash"'

    config.vm.define 'nstat_base_single' do |nstat_machine|

      nstat_machine.vm.box = nstat_vm_basebox
        nstat_machine.vm.network :private_network, ip: nstat_vm_private_network_ip_vm
        nstat_machine.vm.provider :virtualbox do |vb|
            # Display the VirtualBox GUI when booting the machine
            vb.gui = true

            # Customize the amount of memory on the VM:
            vb.memory = nstat_vm_ram
            vb.cpus = nstat_vm_cpus
        end

        nstat_machine.vm.provider :libvirt do |libvirt|
            libvirt.memory = nstat_vm_ram
            libvirt.cpus = nstat_vm_cpus
        end

    end


end
